///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не Параметры.Свойство("КомпоновщикНастроек", КомпоновщикНастроек) Тогда
		ВызватьИсключение "Не передан служебный параметр ""КомпоновщикНастроек"".";
	КонецЕсли;
	Если Не Параметры.Свойство("НастройкиОтчета", НастройкиОтчета) Тогда
		ВызватьИсключение "Не передан служебный параметр ""НастройкиОтчета"".";
	КонецЕсли;
	Если Не Параметры.Свойство("ИдентификаторЭлементаСтруктурыНастроек", ИдентификаторЭлементаСтруктурыНастроек) Тогда
		ВызватьИсключение "Не передан служебный параметр ""ИдентификаторЭлементаСтруктурыНастроек"".";
	КонецЕсли;
	Если Не Параметры.Свойство("ИдентификаторКД", ИдентификаторКД) Тогда
		ВызватьИсключение "Не передан служебный параметр ""ИдентификаторКД"".";
	КонецЕсли;
	Если Не Параметры.Свойство("Наименование", Наименование) Тогда
		ВызватьИсключение "Не передан служебный параметр ""Наименование"".";
	КонецЕсли;
	Если Параметры.Свойство("Заголовок") Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;

	Источник = Новый ИсточникДоступныхНастроекКомпоновкиДанных(НастройкиОтчета.АдресСхемы);
	КомпоновщикНастроек.Инициализировать(Источник);

	УзелКД = КомпоновщикНастроек.Настройки.УсловноеОформление;
	Если ИдентификаторКД = Неопределено Тогда // Новый элемент
		ЭтоНовый							= Истина;
		ЭлементКД							= УзелКД.Элементы.Вставить(0);
		ЭлементКД.Использование				= Истина;
		ЭлементКД.РежимОтображения			= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
		Элементы.Наименование.КнопкаОчистки	= Ложь;
	Иначе
		УзелКДИсточник = УзелКД(ЭтотОбъект);
		Если УзелКДИсточник = Неопределено Тогда
			ВызватьИсключение "Не существует узел отчета.";
		КонецЕсли;
		ЭлементКДИсточник = УзелКДИсточник.ПолучитьОбъектПоИдентификатору(ИдентификаторКД);
		Если ЭлементКДИсточник = Неопределено Тогда
			ВызватьИсключение "Не существует элемент условного оформления.";
		КонецЕсли;
		ЭлементКД = ВариантыОтчетовКлиентСервер.О_СкопироватьРекурсивно(УзелКД, ЭлементКДИсточник, УзелКД.Элементы, 0, Новый Соответствие);

		НаименованиеПоУмолчанию					= ВариантыОтчетовКлиентСервер.О_ПредставлениеЭлементаУсловногоОформления(ЭлементКД, Неопределено, "");
		НаименованиеПереопределено				= (Наименование <> "" И Наименование <> НаименованиеПоУмолчанию);
		Элементы.Наименование.ПодсказкаВвода	= НаименованиеПоУмолчанию;
		Если Не НаименованиеПереопределено Тогда
			Наименование						= "";
			Элементы.Наименование.КнопкаОчистки	= Ложь;
		КонецЕсли;
	КонецЕсли;

	ПроверитьПолеОформления(ЭлементКД);
	ПроверитьУсловие(ЭлементКД);

	Для Каждого ПолеФлажка Из Элементы.ГруппаОбластьОтображения.ПодчиненныеЭлементы Цикл
		ИмяФлажка = ПолеФлажка.Имя;
		ФлажкиОбластиОтображения.Добавить(ИмяФлажка);
		Если ЭлементКД[ИмяФлажка] = ИспользованиеУсловногоОформленияКомпоновкиДанных.Использовать Тогда
			ЭтотОбъект[ИмяФлажка] = Истина;
		КонецЕсли;
	КонецЦикла;

	ЗакрыватьПриВыборе = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	Если Наименование = "" Или Наименование = Элементы.Наименование.ПодсказкаВвода Тогда
		ТребуетсяОбновлениеНаименованияПоУмолчанию	= Истина;
		ОбновитьНаименованиеПоУмолчаниюЕслиТребуется();
		Элементы.Наименование.КнопкаОчистки			= Ложь;
	Иначе
		Элементы.Наименование.КнопкаОчистки			= Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВГруппировкеПриИзменении(Элемент)
	ОбновитьНаименованиеПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВИерархическойГруппировкеПриИзменении(Элемент)
	ОбновитьНаименованиеПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВОбщемИтогеПриИзменении(Элемент)
	ОбновитьНаименованиеПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВЗаголовкеПолейПриИзменении(Элемент)
	ОбновитьНаименованиеПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВЗаголовкеПриИзменении(Элемент)
	ОбновитьНаименованиеПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВПараметрахПриИзменении(Элемент)
	ОбновитьНаименованиеПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВОтбореПриИзменении(Элемент)
	ОбновитьНаименованиеПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура ОформлениеПриИзменении(Элемент)
	ОбновитьНаименованиеПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура ОтборПриИзменении(Элемент)
	ОбновитьНаименованиеПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура ОформляемыеПоляПриИзменении(Элемент)
	ОбновитьНаименованиеПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	ВыбратьИЗакрыть();
КонецПроцедуры

&НаКлиенте
Процедура Показывать_УстановитьПометки(Команда)
	Для Каждого ЭлементСписка Из ФлажкиОбластиОтображения Цикл
		ЭтотОбъект[ЭлементСписка.Значение] = Истина;
	КонецЦикла;
	ОбновитьНаименованиеПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура Показывать_СнятьПометки(Команда)
	Для Каждого ЭлементСписка Из ФлажкиОбластиОтображения Цикл
		ЭтотОбъект[ЭлементСписка.Значение] = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВставитьНаименованиеПоУмолчанию(Команда)
	Наименование						= НаименованиеПоУмолчанию;
	Элементы.Наименование.КнопкаОчистки	= Ложь;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция УзелКД(Форма)
	Если Форма.ИдентификаторЭлементаСтруктурыНастроек = Неопределено Тогда
		Возврат Форма.КомпоновщикНастроек.Настройки.УсловноеОформление;
	Иначе
		ТекущийУзелКД = Форма.КомпоновщикНастроек.Настройки.ПолучитьОбъектПоИдентификатору(Форма.ИдентификаторЭлементаСтруктурыНастроек);

		Возврат ТекущийУзелКД.УсловноеОформление;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ПроверитьПолеОформления(ЭлементОформления)
	Если Не Параметры.Свойство("Поле") Или ТипЗнч(Параметры.Поле) <> Тип("ПолеКомпоновкиДанных") Тогда
		Возврат;
	КонецЕсли;

	ПолеОформления = Неопределено;

	Для Каждого Элемент Из ЭлементОформления.Поля.Элементы Цикл
		Если Элемент.Поле = Параметры.Поле Тогда
			ПолеОформления = Элемент;

			Прервать;
		КонецЕсли;
	КонецЦикла;

	Если ПолеОформления  = Неопределено Тогда
		ПолеОформления		= ЭлементОформления.Поля.Элементы.Добавить();
		ПолеОформления.Поле	= Параметры.Поле;
	КонецЕсли;

	ПолеОформления.Использование = Истина;
КонецПроцедуры

&НаСервере
Процедура ПроверитьУсловие(ЭлементОформления)
	Условие = Неопределено;

	Если Не Параметры.Свойство("Условие", Условие) Или ТипЗнч(Условие) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;

	ЭлементОтбора = Неопределено;

	Для Каждого Элемент Из ЭлементОформления.Отбор.Элементы Цикл
		Если ТипЗнч(Элемент) = Тип("ЭлементОтбораКомпоновкиДанных") И Элемент.ЛевоеЗначение = Условие.ЛевоеЗначение Тогда
			ЭлементОтбора = Элемент;

			Прервать;
		КонецЕсли;
	КонецЦикла;

	Если ЭлементОтбора = Неопределено Тогда
		ЭлементОтбора				= ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение	= Условие.ЛевоеЗначение;
	КонецЕсли;

	ЭлементОтбора.ВидСравнения		= Условие.ВидСравнения;
	ЭлементОтбора.ПравоеЗначение	= Условие.ПравоеЗначение;
	ЭлементОтбора.Использование		= Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНаименованиеПоУмолчанию()
	ТребуетсяОбновлениеНаименованияПоУмолчанию = Истина;
	Если Наименование = "" Или Наименование = Элементы.Наименование.ПодсказкаВвода Тогда
		ПодключитьОбработчикОжидания("ОбновитьНаименованиеПоУмолчаниюЕслиТребуется", 1, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНаименованиеПоУмолчаниюЕслиТребуется()
	Если Не ТребуетсяОбновлениеНаименованияПоУмолчанию Тогда
		Возврат;
	КонецЕсли;
	ТребуетсяОбновлениеНаименованияПоУмолчанию	= Ложь;
	УзелКД										= КомпоновщикНастроек.Настройки.УсловноеОформление;
	ЭлементКД									= УзелКД.Элементы[0];
	НаименованиеПоУмолчанию						= ВариантыОтчетовКлиентСервер.О_ПредставлениеЭлементаУсловногоОформления(ЭлементКД, Неопределено, "");
	Если Наименование = Элементы.Наименование.ПодсказкаВвода Тогда
		Наименование							= НаименованиеПоУмолчанию;
		Элементы.Наименование.ПодсказкаВвода	= НаименованиеПоУмолчанию;
	ИначеЕсли Наименование = "" Тогда
		Элементы.Наименование.ПодсказкаВвода	= НаименованиеПоУмолчанию;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИЗакрыть()
	ОтключитьОбработчикОжидания("ОбновитьНаименованиеПоУмолчаниюЕслиТребуется");
	ОбновитьНаименованиеПоУмолчаниюЕслиТребуется();

	Если Наименование = "" Тогда
		Наименование = НаименованиеПоУмолчанию;
	КонецЕсли;

	ЭлементКД = КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы[0];

	Если Наименование = НаименованиеПоУмолчанию Тогда
		ЭлементКД.ПредставлениеПользовательскойНастройки = "";
	Иначе
		ЭлементКД.ПредставлениеПользовательскойНастройки = Наименование;
	КонецЕсли;

	Для Каждого ЭлементСписка Из ФлажкиОбластиОтображения Цикл
		ИмяФлажка = ЭлементСписка.Значение;
		Если ЭтотОбъект[ИмяФлажка] Тогда
			ЭлементКД[ИмяФлажка] = ИспользованиеУсловногоОформленияКомпоновкиДанных.Использовать;
		Иначе
			ЭлементКД[ИмяФлажка] = ИспользованиеУсловногоОформленияКомпоновкиДанных.НеИспользовать;
		КонецЕсли;
	КонецЦикла;

	Результат = Новый Структура("ЭлементКД, Наименование", ЭлементКД, Наименование);
	ОповеститьОВыборе(Результат);
	Закрыть(Результат);
КонецПроцедуры
