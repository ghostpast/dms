///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

&НаКлиенте
Перем ИмяАрхива;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьОписаниеВариантаОтчета();
	ПрочитатьПользовательскиеНастройки();

	УстановитьУсловноеОформление();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ИмяАрхива	= "ReportOptions.zip";

	Обработчик	= Новый ОписаниеОповещения("ПослеУстановкиРасширенияРаботыСФайлами", ЭтотОбъект);
	БазоваяПодсистемаКлиент.ФС_ПодключитьРасширениеДляРаботыСФайлами(Обработчик, ТекстПредложения());
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ИмяФайла) И Не СтрЗаканчиваетсяНа(ИмяФайла, ".zip") Тогда
		ИмяФайла = ИмяФайла + ".zip";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	БазоваяПодсистемаКлиент.ФС_ВыбратьКаталог(Новый ОписаниеОповещения("ИмяФайлаПослеВыбораКаталога", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ПользовательскиеНастройкиПриИзменении(Элемент)
	ТекущиеПользовательскиеНастройки = ПользовательскиеНастройки.НайтиПоЗначению(КлючТекущихПользовательскихНастроек);
	Если ТекущиеПользовательскиеНастройки <> Неопределено Тогда
		ТекущиеПользовательскиеНастройки.Пометка = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	УпаковатьНастройкиВариантаОтчета();

	Если Не ЗначениеЗаполнено(ИмяФайла) Тогда
		ИмяФайла = ИмяАрхива;
	КонецЕсли;

	Обработчик = Новый ОписаниеОповещения("УпаковатьНастройкиВариантаОтчетаЗавершение", ЭтотОбъект);

	ПараметрыСохранения							= БазоваяПодсистемаКлиент.ФС_КонтекстОперации(РежимДиалогаВыбораФайла.Сохранение);
	ПараметрыСохранения.ТекстПредложения		= ТекстПредложения();
	ПараметрыСохранения.Диалог.Фильтр			= "Архив (*.zip)|*.zip";
	ПараметрыСохранения.Диалог.Заголовок		= "Укажите файл";
	ПараметрыСохранения.Диалог.ПолноеИмяФайла	= ИмяФайла;

	БазоваяПодсистемаКлиент.ФС_СохранитьФайл(Обработчик, АдресХранилищаАрхива, ИмяФайла, ПараметрыСохранения);
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	УсловноеОформление.Элементы.Очистить();

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента		= Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле	= Новый ПолеКомпоновкиДанных(Элементы.ПользовательскиеНастройкиЗначение.Имя);

	ОтборЭлемента					= Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ПользовательскиеНастройки.Представление");
	ОтборЭлемента.ВидСравнения		= ВидСравненияКомпоновкиДанных.Содержит;
	ОтборЭлемента.ПравоеЗначение	= "[ЭтоТекущиеНастройки]";

	ШрифтВажнойНадписи = Метаданные.ЭлементыСтиля.ВажнаяНадписьШрифт;
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтВажнойНадписи.Значение);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", ПредставлениеТекущихПользовательскихНастроек);

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента		= Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле	= Новый ПолеКомпоновкиДанных(Элементы.ПользовательскиеНастройкиПометка.Имя);

	ОтборЭлемента					= Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ПользовательскиеНастройки.Представление");
	ОтборЭлемента.ВидСравнения		= ВидСравненияКомпоновкиДанных.Содержит;
	ОтборЭлемента.ПравоеЗначение	= "[ЭтоТекущиеНастройки]";

	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОписаниеВариантаОтчета()
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, ВариантыОтчетовКлиентСервер.ВО_СвойстваСохраненияВариантаОтчета());

	Если ЗначениеЗаполнено(ИмяОтчета) Тогда
		Возврат;
	КонецЕсли;

	ОписаниеВариантаОтчета = БазоваяПодсистемаСервер.ОН_ЗначенияРеквизитовОбъекта(ВариантОтчета, "Отчет, КлючВарианта, Представление, Настройки, ТипОтчета");

	Если ОписаниеВариантаОтчета.ТипОтчета = Перечисления.ТипыОтчетов.Дополнительный Тогда
		Возврат;
	КонецЕсли;

	МетаданныеОтчета	= Справочники.ИдентификаторыОбъектовМетаданных.ОбъектМетаданныхПоИдентификатору(ОписаниеВариантаОтчета.Отчет, Истина);
	ИмяОтчета			= МетаданныеОтчета.ПолноеИмя();

	КлючТекущегоВарианта			= ОписаниеВариантаОтчета.КлючВарианта;
	ПредставлениеТекущегоВарианта	= ОписаниеВариантаОтчета.Представление;

	// Поиск текущих пользовательских настроек.
	Отбор = Новый Структура;
	Отбор.Вставить("КлючОбъекта", ИмяОтчета + "/" + КлючТекущегоВарианта + "/" + "КлючТекущихПользовательскихНастроек");
	Отбор.Вставить("Пользователь", ИмяПользователя());

	Выборка = ХранилищеСистемныхНастроек.Выбрать(Отбор);
	Если Выборка.Следующий() Тогда
		КлючТекущихПользовательскихНастроек = Выборка.Настройки;
	КонецЕсли;

	НастройкиВариантаОтчета = ОписаниеВариантаОтчета.Настройки.Получить();
	Если НастройкиВариантаОтчета <> Неопределено Тогда
		Возврат;
	КонецЕсли;

	Отчет = ВариантыОтчетовСервер.О_ОтчетОбъект(ИмяОтчета);

	НастройкиВариантаОтчета = Отчет.СхемаКомпоновкиДанных.ВариантыНастроек[КлючТекущегоВарианта].Настройки;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьПользовательскиеНастройки()
	Отбор = Новый Структура;
	Отбор.Вставить("КлючОбъекта", ИмяОтчета + "/" + КлючТекущегоВарианта);
	Отбор.Вставить("Пользователь", ИмяПользователя());

	Выборка = ХранилищеПользовательскихНастроекОтчетов.Выбрать(Отбор);
	Пока Выборка.Следующий() Цикл
		ПользовательскиеНастройки.Добавить(Выборка.КлючНастроек, Выборка.Представление);
		ЗаполнитьЗначенияСвойств(ХранилищеПользовательскихНастроек.Добавить(), Выборка);
	КонецЦикла;

	ТекущиеПользовательскиеНастройки = ПользовательскиеНастройки.НайтиПоЗначению(КлючТекущихПользовательскихНастроек);
	Если ТекущиеПользовательскиеНастройки = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ПредставлениеТекущихПользовательскихНастроек) Тогда
		ПредставлениеТекущихПользовательскихНастроек = ТекущиеПользовательскиеНастройки.Представление;
	КонецЕсли;

	ТекущиеПользовательскиеНастройки.Пометка		= Истина;
	ТекущиеПользовательскиеНастройки.Представление	= ТекущиеПользовательскиеНастройки.Представление + " [ЭтоТекущиеНастройки]";

	Индекс = ПользовательскиеНастройки.Индекс(ТекущиеПользовательскиеНастройки);
	Если Индекс > 0 Тогда
		ПользовательскиеНастройки.Сдвинуть(ТекущиеПользовательскиеНастройки, -Индекс);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаПослеВыбораКаталога(Каталог, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(Каталог) Тогда
		ИмяФайла = БазоваяПодсистемаКлиентСервер.ОН_ДобавитьКонечныйРазделительПути(Каталог) + ИмяАрхива;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УпаковатьНастройкиВариантаОтчета()
	ИмяКаталога = БазоваяПодсистемаСервер.ФС_СоздатьВременныйКаталог();

	Если Не ЗначениеЗаполнено(ИмяКаталога) Тогда
		Возврат;
	КонецЕсли;

	ИмяКаталога		= БазоваяПодсистемаКлиентСервер.ОН_ДобавитьКонечныйРазделительПути(ИмяКаталога);
	ИмяФайлаАрхива	= ПолучитьИмяВременногоФайла("zip");

	Архив = Новый ЗаписьZipФайла(ИмяФайлаАрхива);

	ДобавитьНастройкиВАрхив(Архив, НастройкиВариантаОтчета, ИмяКаталога, "Settings");

	Счетчик	= 0;
	Поиск	= Новый Структура("КлючНастроек");

	Для Каждого ЭлементСписка Из ПользовательскиеНастройки Цикл
		Если Не ЭлементСписка.Пометка Тогда
			Продолжить;
		КонецЕсли;

		Счетчик				= Счетчик + 1;
		Поиск.КлючНастроек 	= ЭлементСписка.Значение;

		НайденныеНастройки = ХранилищеПользовательскихНастроек.НайтиСтроки(Поиск);
		ДобавитьНастройкиВАрхив(Архив, НайденныеНастройки[0].Настройки, ИмяКаталога, "UserSettings", Счетчик);
	КонецЦикла;

	ДобавитьОписаниеНастроекВАрхив(Архив, ИмяКаталога);

	Архив.Записать();

	ДвоичныеДанные			= Новый ДвоичныеДанные(ИмяФайлаАрхива);
	АдресХранилищаАрхива	= ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);

	БазоваяПодсистемаСервер.ФС_УдалитьВременныйКаталог(ИмяКаталога);
	БазоваяПодсистемаСервер.ФС_УдалитьВременныйФайл(ИмяФайлаАрхива);
КонецПроцедуры

&НаКлиенте
Процедура УпаковатьНастройкиВариантаОтчетаЗавершение(Файлы, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Файлы) = Тип("Массив") И Файлы.Количество() > 0 Тогда
		ПоказатьОповещениеПользователя("Вариант отчета сохранен в файл",, ИмяФайла);
	КонецЕсли;

	Закрыть();
КонецПроцедуры

&НаСервере
Процедура ДобавитьНастройкиВАрхив(Архив, Настройки, ИмяКаталога, ТипНастроек, Суффикс = Неопределено)
	ИмяФайлаНастроек = ИмяКаталога + ТипНастроек + ?(Суффикс = Неопределено, "", Суффикс) + ".xml";

	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ИмяФайлаНастроек);

	СериализаторXDTO.ЗаписатьXML(ЗаписьXML, Настройки, НазначениеТипаXML.Явное);

	ЗаписьXML.Закрыть();

	Архив.Добавить(ИмяФайлаНастроек);
КонецПроцедуры

&НаСервере
Процедура ДобавитьОписаниеНастроекВАрхив(Архив, ИмяКаталога)
	ИмяФайлаОписанияНастроек = ИмяКаталога + "SettingsDescription.xml";

	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ИмяФайлаОписанияНастроек);

	ЗаписьXML.ЗаписатьНачалоЭлемента("SettingsDescription");

	ЗаписьXML.ЗаписатьАтрибут("ReportName", ИмяОтчета);

	ЗаписьXML.ЗаписатьНачалоЭлемента("Settings");

	ЗаписьXML.ЗаписатьАтрибут("Key", КлючТекущегоВарианта);
	ЗаписьXML.ЗаписатьАтрибут("Presentation", ПредставлениеТекущегоВарианта);

	ЗаписьXML.ЗаписатьКонецЭлемента(); // <Settings>

	Для Каждого ЭлементСписка Из ПользовательскиеНастройки Цикл
		Если Не ЭлементСписка.Пометка Тогда
			Продолжить;
		КонецЕсли;

		ПредставлениеНастройки	= СокрЛП(СтрЗаменить(ЭлементСписка.Представление, "[ЭтоТекущиеНастройки]", ""));
		ЭтоТекущиеНастройки		= ПредставлениеНастройки = ПредставлениеТекущихПользовательскихНастроек;

		ЗаписьXML.ЗаписатьНачалоЭлемента("UserSettings");

		ЗаписьXML.ЗаписатьАтрибут("Key", ЭлементСписка.Значение);
		ЗаписьXML.ЗаписатьАтрибут("Presentation", ПредставлениеНастройки);
		ЗаписьXML.ЗаписатьАтрибут("isCurrent", XMLСтрока(ЭтоТекущиеНастройки));

		ЗаписьXML.ЗаписатьКонецЭлемента(); // <UserSettings>
	КонецЦикла;

	ЗаписьXML.ЗаписатьКонецЭлемента(); // <SettingsDescription>
	ЗаписьXML.Закрыть();

	Архив.Добавить(ИмяФайлаОписанияНастроек);
КонецПроцедуры

&НаКлиенте
Процедура ПослеУстановкиРасширенияРаботыСФайлами(РасширениеПодключено, ДополнительныеПараметры) Экспорт
	Если РасширениеПодключено = Истина Тогда
		Обработчик = Новый ОписаниеОповещения("ПослеПолученияКаталогаДокументов", ЭтотОбъект);
		НачатьПолучениеКаталогаДокументов(Обработчик);
	ИначеЕсли Не ЗначениеЗаполнено(ИмяФайла) Тогда
		ИмяФайла = ИмяАрхива;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеПолученияКаталогаДокументов(ИмяКаталогаДокументов, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(ИмяКаталогаДокументов) Тогда
		ИмяФайла = ИмяКаталогаДокументов + ИмяАрхива;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ТекстПредложения()
	Возврат "Для сохранения варианта отчета в файл рекомендуется
		|установить расширение для работы с файлами.";
КонецФункции
